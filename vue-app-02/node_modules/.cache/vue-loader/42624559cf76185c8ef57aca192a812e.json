{"remainingRequest":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\TestProjects\\plantApp\\vue-app-02\\src\\components\\Plant.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\src\\components\\Plant.vue","mtime":1637758975823},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637249085714},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\babel-loader\\lib\\index.js","mtime":1637249087146},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637249085714},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\index.js","mtime":1637249087400}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgUGxhbnRTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL1BsYW50U2VydmljZSI7DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJQbGFudCIsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGxvYWRpbmc6IGZhbHNlLA0KICAgICAgc2VsZWN0aW9uOiBbXSwNCiAgICAgIHBsYW50SWQ6ICIxIiwNCiAgICAgIHBsYW50TmFtZTogIiIsDQogICAgICBwbGFudFR5cGU6ICIiLA0KICAgICAgcGxhbnREb3A6ICIiLA0KICAgICAgY2hpcFRlbXA6IGZhbHNlLA0KICAgICAgY2hpcEh1bTogZmFsc2UsDQogICAgICBjaGlwTW9pczogZmFsc2UsDQogICAgICBjaGlwTGlnaHQ6IGZhbHNlLA0KICAgICAgY2hpcERhdGVQaWNrZXI6IGZhbHNlLA0KICAgICAgZGF0ZXM6IFsiMjAyMS0wOS0wMSIsICIyMDIxLTExLTMwIl0sDQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGdldFRvT3ZlcnZpZXcoKSB7DQogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOw0KDQogICAgICBzZXRUaW1lb3V0KCgpID0+ICh0aGlzLmxvYWRpbmcgPSBmYWxzZSksIDIwMDApOw0KICAgIH0sDQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5wbGFudElkID0gdGhpcy4kcm91dGUucGFyYW1zLnBsYW50SWQ7DQogICAgUGxhbnRTZXJ2aWNlLmdldFBsYW50cygpLnRoZW4oKHJlc3BvbnNlKSA9PiB7DQogICAgICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlKQ0KICAgICAgY29uc3QgZGF0YSA9IHJlc3BvbnNlLmRhdGE7DQogICAgICAvL2NvbnNvbGUubG9nKGRhdGEpDQogICAgICBjb25zdCBwbGFudHMgPSBbXTsNCiAgICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7DQogICAgICAgIGNvbnN0IHBsYW50ID0gZGF0YVtrZXldOw0KICAgICAgICAvL3BsYW50LmlkZW50ID0ga2V5DQogICAgICAgIHBsYW50cy5wdXNoKHBsYW50KTsNCiAgICAgIH0NCiAgICAgIC8vY29uc29sZS5sb2cocGxhbnRzKQ0KICAgICAgLy9sZXQgaW5kZXggPSBwbGFudHMuZmluZEluZGV4KChwbGFudCkgPT4gcGxhbnQuaWQgPT09IDE5KTsNCiAgICAgIGxldCBpbmRleCA9IHBsYW50cw0KICAgICAgICAubWFwKGZ1bmN0aW9uIChlbGVsZW1lbnQpIHsNCiAgICAgICAgICByZXR1cm4gZWxlbGVtZW50LmlkOw0KICAgICAgICB9KQ0KICAgICAgICAuaW5kZXhPZihOdW1iZXIodGhpcy5wbGFudElkKSk7DQogICAgICAvLyBsZXQgaW5kZXggPSBwbGFudHMubWFwKChlbCkgPT4gZWwuaWQpLmluZGV4T2YoMTkpOw0KICAgICAgY29uc29sZS5sb2coImlkOiAiICsgdGhpcy5wbGFudElkKTsNCiAgICAgIGNvbnNvbGUubG9nKCJpbmRleDogIiArIGluZGV4KTsNCiAgICAgIHRoaXMucGxhbnROYW1lID0gcGxhbnRzW2luZGV4XS5uYW1lOw0KICAgICAgdGhpcy5wbGFudFR5cGUgPSBwbGFudHNbaW5kZXhdLnR5cGU7DQogICAgICB0aGlzLnBsYW50RG9wID0gcGxhbnRzW2luZGV4XS5kb3A7DQogICAgICAvL2NvbnNvbGUubG9nKHBsYW50cy5tYXAoKGVsKSA9PiBlbC5pZCkuaW5kZXhPZigxKSk7DQogICAgfSk7DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgZGF0ZVJhbmdlVGV4dCgpIHsNCiAgICAgIHJldHVybiB0aGlzLmRhdGVzLmpvaW4oIiB+ICIpOw0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["Plant.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Plant.vue","sourceRoot":"src/components","sourcesContent":["<!--<template>\r\n    <v-container>\r\n        <p>{{ plants ? plants.id : 'Hey Dude, where are my plants???'}}</p>\r\n    </v-container>\r\n</template>-->\r\n\r\n<template>\r\n  <v-card\r\n    :loading=\"loading\"\r\n    class=\"mx-auto\"\r\n    max-width=\"374\"\r\n    color=\"teal lighten-4\"\r\n  >\r\n    <template slot=\"progress\">\r\n      <v-progress-linear\r\n        color=\"deep-purple\"\r\n        height=\"10\"\r\n        indeterminate\r\n      ></v-progress-linear>\r\n    </template>\r\n\r\n    <v-img\r\n      height=\"250\"\r\n      src=\"https://cdn.vuetifyjs.com/images/cards/cooking.png\"\r\n    ></v-img>\r\n\r\n    <v-card-title>{{ plantName }}</v-card-title>\r\n\r\n    <v-card-text>\r\n      <v-row align=\"center\" class=\"mx-0\">\r\n        <v-rating\r\n          :value=\"4.5\"\r\n          color=\"amber\"\r\n          dense\r\n          half-increments\r\n          readonly\r\n          size=\"14\"\r\n        ></v-rating>\r\n      </v-row>\r\n\r\n      <div class=\"my-4 text-subtitle-1\">\r\n        <p>{{ plantType }}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <p>alive since {{ plantDop }}</p>\r\n      </div>\r\n    </v-card-text>\r\n\r\n    <v-divider class=\"mx-4\"></v-divider>\r\n\r\n    <v-card-title>Look! Graphs!</v-card-title>\r\n    <v-card-text>\r\n      <v-chip-group\r\n        multiple\r\n        v-model=\"selection\"\r\n        active-class=\"deep-purple lighten-1 white--text\"\r\n        column\r\n      >\r\n        <v-chip @click=\"chipDatePicker = !chipDatePicker\">DatePicker</v-chip>\r\n        <v-chip @click=\"chipTemp = !chipTemp\">Temperatures</v-chip>\r\n        <v-chip @click=\"chipHum = !chipHum\">Humidity</v-chip>\r\n        <v-chip @click=\"chipMois = !chipMois\">Moisture</v-chip>\r\n        <v-chip @click=\"chipLight = !chipLight\">Light</v-chip>\r\n\r\n        <v-card-text v-if=\"chipDatePicker\">\r\n          <v-date-picker v-model=\"dates\"\r\n          range\r\n          color=\"deep-purple lighten-2\"\r\n          ></v-date-picker>\r\n          <v-text-field\r\n            v-model=\"dateRangeText\"\r\n            label=\"Date range\"\r\n            prepend-icon=\"mdi-calendar\"\r\n            readonly\r\n          ></v-text-field>\r\n        </v-card-text>\r\n\r\n        <measurements-component\r\n          v-if=\"chipTemp\"\r\n          :pickerDates=\"dates\"\r\n          measurementType=\"temp\"\r\n        ></measurements-component>\r\n        <measurements-component\r\n          v-if=\"chipHum\"\r\n          :pickerDates=\"dates\"\r\n          measurementType=\"humidity\"\r\n        ></measurements-component>\r\n        <measurements-component\r\n          v-if=\"chipMois\"\r\n          :pickerDates=\"dates\"\r\n          measurementType=\"moisture\"\r\n        ></measurements-component>\r\n        <measurements-component\r\n          v-if=\"chipLight\"\r\n          :pickerDates=\"dates\"\r\n          measurementType=\"light\"\r\n        ></measurements-component>\r\n      </v-chip-group>\r\n    </v-card-text>\r\n\r\n    <v-divider class=\"mx-4\"></v-divider>\r\n\r\n    <v-card-actions>\r\n      <v-btn\r\n        color=\"deep-purple lighten-1\"\r\n        text\r\n        :to=\"'/plantsOverview'\"\r\n        @click=\"getToOverview\"\r\n      >\r\n        Back to the Overview\r\n      </v-btn>\r\n    </v-card-actions>\r\n  </v-card>\r\n</template>\r\n\r\n\r\n<script>\r\nimport PlantService from \"../services/PlantService\";\r\nexport default {\r\n  name: \"Plant\",\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      selection: [],\r\n      plantId: \"1\",\r\n      plantName: \"\",\r\n      plantType: \"\",\r\n      plantDop: \"\",\r\n      chipTemp: false,\r\n      chipHum: false,\r\n      chipMois: false,\r\n      chipLight: false,\r\n      chipDatePicker: false,\r\n      dates: [\"2021-09-01\", \"2021-11-30\"],\r\n    };\r\n  },\r\n  methods: {\r\n    getToOverview() {\r\n      this.loading = true;\r\n\r\n      setTimeout(() => (this.loading = false), 2000);\r\n    },\r\n  },\r\n  created() {\r\n    this.plantId = this.$route.params.plantId;\r\n    PlantService.getPlants().then((response) => {\r\n      //console.log(response)\r\n      const data = response.data;\r\n      //console.log(data)\r\n      const plants = [];\r\n      for (let key in data) {\r\n        const plant = data[key];\r\n        //plant.ident = key\r\n        plants.push(plant);\r\n      }\r\n      //console.log(plants)\r\n      //let index = plants.findIndex((plant) => plant.id === 19);\r\n      let index = plants\r\n        .map(function (elelement) {\r\n          return elelement.id;\r\n        })\r\n        .indexOf(Number(this.plantId));\r\n      // let index = plants.map((el) => el.id).indexOf(19);\r\n      console.log(\"id: \" + this.plantId);\r\n      console.log(\"index: \" + index);\r\n      this.plantName = plants[index].name;\r\n      this.plantType = plants[index].type;\r\n      this.plantDop = plants[index].dop;\r\n      //console.log(plants.map((el) => el.id).indexOf(1));\r\n    });\r\n  },\r\n  computed: {\r\n    dateRangeText() {\r\n      return this.dates.join(\" ~ \");\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]}]}