{"remainingRequest":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\TestProjects\\plantApp\\vue-app-02\\src\\components\\measurements\\Measurement.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\src\\components\\measurements\\Measurement.vue","mtime":1637763219861},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637249085714},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\babel-loader\\lib\\index.js","mtime":1637249087146},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637249085714},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\index.js","mtime":1637249087400}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyAgaW1wb3J0IFBsYW50U2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9QbGFudFNlcnZpY2UiOw0KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsNCmNvbnN0IGdyYWRpZW50cyA9IFsNCiAgWyIjMjIyIl0sDQogIFsiIzQyYjNmNCJdLA0KICBbInJlZCIsICJvcmFuZ2UiLCAieWVsbG93Il0sDQogIFsicHVycGxlIiwgInZpb2xldCJdLA0KICBbIiMwMGM2ZmYiLCAiI0YwRiIsICIjRkYwIl0sDQogIFsiI2Y3MjA0NyIsICIjZmZkMjAwIiwgIiMxZmVhZWEiXSwNCl07DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIk1lYXN1cmVtZW50IiwNCiAgcHJvcHM6IFsncGlja2VyRGF0ZXMnLA0KICAgICAgICAgICdtZWFzdXJlbWVudFR5cGUnXSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgc3RhcnREYXRlOiB0aGlzLnBpY2tlckRhdGVzWzBdLA0KICAgICAgZW5kRGF0ZTogdGhpcy5waWNrZXJEYXRlc1sxXSwNCiAgICAgIG1lYXN1cmVtZW50czogW10sDQogICAgICBtZWFzdXJlbWVudHNMZW5ndGg6ICcnLA0KICAgICAgd2lkdGg6IDIsDQogICAgICByYWRpdXM6IDEwLA0KICAgICAgcGFkZGluZzogOCwNCiAgICAgIGxpbmVDYXA6ICJyb3VuZCIsDQogICAgICBncmFkaWVudDogZ3JhZGllbnRzWzVdLA0KICAgICAgZ3JhZGllbnREaXJlY3Rpb246ICJ0b3AiLA0KICAgICAgZ3JhZGllbnRzLA0KICAgICAgZmlsbDogZmFsc2UsDQogICAgICB0eXBlOiAidHJlbmQiLA0KICAgICAgYXV0b0xpbmVXaWR0aDogZmFsc2UsDQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczoge30sDQogIGNyZWF0ZWQoKSB7DQogICAgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpL21lYXN1cmVtZW50cycNCiAgICAgICAgICArICcvJyArIHRoaXMubWVhc3VyZW1lbnRUeXBlDQogICAgICAgICAgKyAnLycgKyB0aGlzLiRyb3V0ZS5wYXJhbXMucGxhbnRJZA0KICAgICAgICAgICsgJy8nICsgJ2JldHdlZW4vJywNCiAgICAgICAgICB7IHBhcmFtczoge2JlZ2luOiB0aGlzLnN0YXJ0RGF0ZSwgZW5kOiB0aGlzLmVuZERhdGV9fSkNCiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpDQogICAgICAgICAgdGhpcy5tZWFzdXJlbWVudHMgPSByZXNwb25zZS5kYXRhDQogICAgICAgICAgdGhpcy5tZWFzdXJlbWVudHNMZW5ndGggPSB0aGlzLm1lYXN1cmVtZW50cy5sZW5ndGgNCiAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnN0YXJ0RGF0ZSkNCiAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmVuZERhdGUpDQogICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5tZWFzdXJlbWVudHMpDQogICAgICAgICAgdmFyIGZhY3RvciA9IE1hdGguZmxvb3IodGhpcy5tZWFzdXJlbWVudHNMZW5ndGgvOSkNCiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLm1lYXN1cmVtZW50c0xlbmd0aCkNCiAgICAgICAgICBjb25zb2xlLmxvZyhmYWN0b3IpDQogICAgICAgICAgdmFyIHByb2Nlc3NlZERhdGEgPSBbXTsNCiAgICAgICAgICB2YXIgdGVtcFZhbHVlID0gMDsNCiAgICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5tZWFzdXJlbWVudHMpIHsNCiAgICAgICAgICAgIHZhciBtZWFzdXJlbWVudCA9IHRoaXMubWVhc3VyZW1lbnRzW2tleV07DQogICAgICAgICAgICAgIHRlbXBWYWx1ZSs9bWVhc3VyZW1lbnQ7DQogICAgICAgICAgICBpZihrZXklZmFjdG9yID09IDAgJiYga2V5ICE9IDApIHsNCiAgICAgICAgICAgICAgLy8gdGVtcFZhbHVlPXRlbXBWYWx1ZS8NCiAgICAgICAgICAgICAgcHJvY2Vzc2VkRGF0YS5wdXNoKHRlbXBWYWx1ZSk7DQogICAgICAgICAgICAgIHRlbXBWYWx1ZSA9IDA7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBjb25zb2xlLmxvZyhrZXkpOw0KICAgICAgICAgIH0NCiAgICAgICAgICBjb25zb2xlLmxvZyhwcm9jZXNzZWREYXRhKTsNCiAgICAgIH0pOw0KICAgIC8vIFBsYW50U2VydmljZS5nZXRUZW1wTWVhc3VyZW1lbnRzKCkudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAvLyAgIHRoaXMubWVhc3VyZW1lbnRzID0gcmVzcG9uc2UuZGF0YTsNCiAgICAvLyB9KTsNCiAgfSwNCn07DQo="},{"version":3,"sources":["Measurement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Measurement.vue","sourceRoot":"src/components/measurements","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-card-text>\r\n      <v-sheet color=\"teal lighten-3\">\r\n        <v-sparkline\r\n          :labels=measurements\r\n          :value=measurements\r\n          :gradient=\"gradient\"\r\n          :smooth=\"radius || false\"\r\n          :padding=\"padding\"\r\n          :line-width=\"width\"\r\n          :stroke-linecap=\"lineCap\"\r\n          :gradient-direction=\"gradientDirection\"\r\n          :fill=\"fill\"\r\n          :type=\"type\"\r\n          :auto-line-width=\"autoLineWidth\"\r\n          auto-draw\r\n        ></v-sparkline>\r\n      </v-sheet>\r\n    </v-card-text>\r\n    <!-- <v-card-text>\r\n      <div class=\"text-subtitle-1 font-weight-normal\">\r\n        {{measurementType}} in the last {{measurementsLength}} minutes\r\n      </div>\r\n    </v-card-text> -->\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n//  import PlantService from \"../services/PlantService\";\r\nimport axios from 'axios';\r\nconst gradients = [\r\n  [\"#222\"],\r\n  [\"#42b3f4\"],\r\n  [\"red\", \"orange\", \"yellow\"],\r\n  [\"purple\", \"violet\"],\r\n  [\"#00c6ff\", \"#F0F\", \"#FF0\"],\r\n  [\"#f72047\", \"#ffd200\", \"#1feaea\"],\r\n];\r\n\r\nexport default {\r\n  name: \"Measurement\",\r\n  props: ['pickerDates',\r\n          'measurementType'],\r\n  data() {\r\n    return {\r\n      startDate: this.pickerDates[0],\r\n      endDate: this.pickerDates[1],\r\n      measurements: [],\r\n      measurementsLength: '',\r\n      width: 2,\r\n      radius: 10,\r\n      padding: 8,\r\n      lineCap: \"round\",\r\n      gradient: gradients[5],\r\n      gradientDirection: \"top\",\r\n      gradients,\r\n      fill: false,\r\n      type: \"trend\",\r\n      autoLineWidth: false,\r\n    };\r\n  },\r\n  methods: {},\r\n  created() {\r\n    axios.get('http://localhost:8080/api/measurements'\r\n          + '/' + this.measurementType\r\n          + '/' + this.$route.params.plantId\r\n          + '/' + 'between/',\r\n          { params: {begin: this.startDate, end: this.endDate}})\r\n      .then(response => {\r\n          //console.log(response.data)\r\n          this.measurements = response.data\r\n          this.measurementsLength = this.measurements.length\r\n          // console.log(this.startDate)\r\n          // console.log(this.endDate)\r\n          // console.log(this.measurements)\r\n          var factor = Math.floor(this.measurementsLength/9)\r\n          console.log(this.measurementsLength)\r\n          console.log(factor)\r\n          var processedData = [];\r\n          var tempValue = 0;\r\n          for (let key in this.measurements) {\r\n            var measurement = this.measurements[key];\r\n              tempValue+=measurement;\r\n            if(key%factor == 0 && key != 0) {\r\n              // tempValue=tempValue/\r\n              processedData.push(tempValue);\r\n              tempValue = 0;\r\n            }\r\n            console.log(key);\r\n          }\r\n          console.log(processedData);\r\n      });\r\n    // PlantService.getTempMeasurements().then((response) => {\r\n    //   this.measurements = response.data;\r\n    // });\r\n  },\r\n};\r\n</script>"]}]}