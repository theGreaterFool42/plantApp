{"remainingRequest":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\TestProjects\\plantApp\\vue-app-02\\src\\components\\Plant.vue?vue&type=template&id=6d3198eb&","dependencies":[{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\src\\components\\Plant.vue","mtime":1637756501945},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637249085714},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1637249087965},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637249085714},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\index.js","mtime":1637249087400}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}