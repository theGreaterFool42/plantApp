{"remainingRequest":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\babel-loader\\lib\\index.js!C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\TestProjects\\plantApp\\vue-app-02\\src\\components\\measurements\\Measurement.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\src\\components\\measurements\\Measurement.vue","mtime":1637833731828},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\babel.config.js","mtime":1637249464102},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637249085714},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\babel-loader\\lib\\index.js","mtime":1637249087146},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637249085714},{"path":"C:\\TestProjects\\plantApp\\vue-app-02\\node_modules\\vue-loader\\lib\\index.js","mtime":1637249087400}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyAgaW1wb3J0IFBsYW50U2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9QbGFudFNlcnZpY2UiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwp2YXIgZ3JhZGllbnRzID0gW1siIzIyMiJdLCBbIiM0MmIzZjQiXSwgWyJyZWQiLCAib3JhbmdlIiwgInllbGxvdyJdLCBbInB1cnBsZSIsICJ2aW9sZXQiXSwgWyIjMDBjNmZmIiwgIiNGMEYiLCAiI0ZGMCJdLCBbIiNmNzIwNDciLCAiI2ZmZDIwMCIsICIjMWZlYWVhIl1dOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk1lYXN1cmVtZW50IiwKICBwcm9wczogWydwaWNrZXJEYXRlcycsICdtZWFzdXJlbWVudFR5cGUnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3RhcnREYXRlOiB0aGlzLnBpY2tlckRhdGVzWzBdLAogICAgICBlbmREYXRlOiB0aGlzLnBpY2tlckRhdGVzWzFdLAogICAgICBtZWFzdXJlbWVudHM6IFtdLAogICAgICBtZWFzdXJlbWVudHNMZW5ndGg6ICcnLAogICAgICBwcm9jZXNzZWREYXRhOiBbXSwKICAgICAgbWF4VmFsdWVzOiAzMiwKICAgICAgd2lkdGg6IDIsCiAgICAgIHJhZGl1czogMTAsCiAgICAgIHBhZGRpbmc6IDgsCiAgICAgIGxpbmVDYXA6ICJyb3VuZCIsCiAgICAgIGdyYWRpZW50OiBncmFkaWVudHNbNV0sCiAgICAgIGdyYWRpZW50RGlyZWN0aW9uOiAidG9wIiwKICAgICAgZ3JhZGllbnRzOiBncmFkaWVudHMsCiAgICAgIGZpbGw6IGZhbHNlLAogICAgICB0eXBlOiAidHJlbmQiLAogICAgICBhdXRvTGluZVdpZHRoOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHt9LAogIC8vdGhlIGNhbGN1bGF0aW9uIGZvciB0aGUgcmVkdWNlZCBkYXRhc2V0IGlzbid0IHdvcmtpbmcgcmVsaWFibGUuIEknbSBub3Qgc3VyZSBpZgogIC8vdGhlIGZpcnN0IGFuZCB0aGUgbGFzdCB2YWx1ZXMgYXJlIGNvcnJlY3QKICAvL1dpdGggZGF0YXNldHMgYmVsb3cgdGhlIG1heCgzMikgdGhpbmdzIGNhbiBnbyB3cm9uZwogIC8vTW9pc3R1cmUgaXMgYWx3YXlzIDAsIGJlY2FzdWUgaWYgeW91IGdldCBhbiBhdmVyYWdlIG9mIDAgYW5kIDEgYW5kIGZsb29yIGl0LCBpdCBpcyAwCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpL21lYXN1cmVtZW50cycgKyAnLycgKyB0aGlzLm1lYXN1cmVtZW50VHlwZSArICcvJyArIHRoaXMuJHJvdXRlLnBhcmFtcy5wbGFudElkICsgJy8nICsgJ2JldHdlZW4vJywgewogICAgICBwYXJhbXM6IHsKICAgICAgICBiZWdpbjogdGhpcy5zdGFydERhdGUsCiAgICAgICAgZW5kOiB0aGlzLmVuZERhdGUKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgLy9jb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKQogICAgICBfdGhpcy5tZWFzdXJlbWVudHMgPSByZXNwb25zZS5kYXRhOwogICAgICBfdGhpcy5tZWFzdXJlbWVudHNMZW5ndGggPSBfdGhpcy5tZWFzdXJlbWVudHMubGVuZ3RoOyAvLyBjb25zb2xlLmxvZyh0aGlzLnN0YXJ0RGF0ZSkKICAgICAgLy8gY29uc29sZS5sb2codGhpcy5lbmREYXRlKQoKICAgICAgY29uc29sZS5sb2coIm1lYXN1cmVtZW50czogIiArIF90aGlzLm1lYXN1cmVtZW50cyk7CiAgICAgIGNvbnNvbGUubG9nKCJtZWFzdXJlbWVudHNMZW5ndGg6ICIgKyBfdGhpcy5tZWFzdXJlbWVudHNMZW5ndGgpOyAvLyBjYWxjIGNvbXByZXNzZWQgYXJyYXkKCiAgICAgIGlmIChfdGhpcy5tZWFzdXJlbWVudHNMZW5ndGggPiBfdGhpcy5tYXhWYWx1ZXMpIHsKICAgICAgICB2YXIgZmFjdG9yID0gTWF0aC5mbG9vcihfdGhpcy5tZWFzdXJlbWVudHNMZW5ndGggLyBfdGhpcy5tYXhWYWx1ZXMpOwogICAgICAgIHZhciBtb2QgPSBfdGhpcy5tZWFzdXJlbWVudHNMZW5ndGggJSBfdGhpcy5tYXhWYWx1ZXM7CgogICAgICAgIHZhciByZWR1Y2VkRGF0ZSA9IF90aGlzLm1lYXN1cmVtZW50cy5zbGljZSgwLCBfdGhpcy5tZWFzdXJlbWVudHNMZW5ndGggLSBtb2QpOyAvL2NvbnNvbGUubG9nKCJtb2Q6ICIgKyBtb2QpCiAgICAgICAgLy9jb25zb2xlLmxvZygiZmFjdG9yOiAiICsgZmFjdG9yKQogICAgICAgIC8vY29uc29sZS5sb2coInJlZHVjZWREYXRhOiAiICsgcmVkdWNlZERhdGUpCgoKICAgICAgICB2YXIgdGVtcFZhbHVlID0gMDsKCiAgICAgICAgZm9yICh2YXIga2V5IGluIHJlZHVjZWREYXRlKSB7CiAgICAgICAgICB2YXIgbWVhc3VyZW1lbnQgPSByZWR1Y2VkRGF0ZVtrZXldOwogICAgICAgICAgdGVtcFZhbHVlICs9IG1lYXN1cmVtZW50OwoKICAgICAgICAgIGlmIChrZXkgJSBmYWN0b3IgPT0gZmFjdG9yIC0gMSkgewogICAgICAgICAgICB0ZW1wVmFsdWUgPSBNYXRoLmZsb29yKHRlbXBWYWx1ZSAvIGZhY3Rvcik7CgogICAgICAgICAgICBfdGhpcy5wcm9jZXNzZWREYXRhLnB1c2godGVtcFZhbHVlKTsKCiAgICAgICAgICAgIHRlbXBWYWx1ZSA9IDA7CiAgICAgICAgICB9IC8vY29uc29sZS5sb2coImtleTogIiArIGtleSk7CgogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBfdGhpcy5wcm9jZXNzZWREYXRhID0gX3RoaXMubWVhc3VyZW1lbnRzOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZygicHJvY2Vzc2VkRGF0YTogIiArIF90aGlzLnByb2Nlc3NlZERhdGEpOwogICAgICBjb25zb2xlLmxvZygicHJvY2Vzc2VkRGF0YUxlbmd0aDogIiArIF90aGlzLnByb2Nlc3NlZERhdGEubGVuZ3RoKTsKICAgIH0pOyAvLyBQbGFudFNlcnZpY2UuZ2V0VGVtcE1lYXN1cmVtZW50cygpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAvLyAgIHRoaXMubWVhc3VyZW1lbnRzID0gcmVzcG9uc2UuZGF0YTsKICAgIC8vIH0pOwogIH0KfTs="},{"version":3,"sources":["Measurement.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-card-text>\r\n      <v-sheet color=\"teal lighten-3\">\r\n        <v-sparkline\r\n          :labels=processedData\r\n          :value=processedData\r\n          :gradient=\"gradient\"\r\n          :smooth=\"radius || false\"\r\n          :padding=\"padding\"\r\n          :line-width=\"width\"\r\n          :stroke-linecap=\"lineCap\"\r\n          :gradient-direction=\"gradientDirection\"\r\n          :fill=\"fill\"\r\n          :type=\"type\"\r\n          :auto-line-width=\"autoLineWidth\"\r\n          auto-draw\r\n        ></v-sparkline>\r\n      </v-sheet>\r\n    </v-card-text>\r\n    <!-- <v-card-text>\r\n      <div class=\"text-subtitle-1 font-weight-normal\">\r\n        {{measurementType}} in the last {{measurementsLength}} minutes\r\n      </div>\r\n    </v-card-text> -->\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n//  import PlantService from \"../services/PlantService\";\r\nimport axios from 'axios';\r\nconst gradients = [\r\n  [\"#222\"],\r\n  [\"#42b3f4\"],\r\n  [\"red\", \"orange\", \"yellow\"],\r\n  [\"purple\", \"violet\"],\r\n  [\"#00c6ff\", \"#F0F\", \"#FF0\"],\r\n  [\"#f72047\", \"#ffd200\", \"#1feaea\"],\r\n];\r\n\r\nexport default {\r\n  name: \"Measurement\",\r\n  props: ['pickerDates',\r\n          'measurementType'],\r\n  data() {\r\n    return {\r\n      startDate: this.pickerDates[0],\r\n      endDate: this.pickerDates[1],\r\n      measurements: [],\r\n      measurementsLength: '',\r\n      processedData: [],\r\n      maxValues: 32,\r\n      width: 2,\r\n      radius: 10,\r\n      padding: 8,\r\n      lineCap: \"round\",\r\n      gradient: gradients[5],\r\n      gradientDirection: \"top\",\r\n      gradients,\r\n      fill: false,\r\n      type: \"trend\",\r\n      autoLineWidth: false,\r\n    };\r\n  },\r\n  methods: {},\r\n  //the calculation for the reduced dataset isn't working reliable. I'm not sure if\r\n  //the first and the last values are correct\r\n  //With datasets below the max(32) things can go wrong\r\n  //Moisture is always 0, becasue if you get an average of 0 and 1 and floor it, it is 0\r\n  created() {\r\n    axios.get('http://localhost:8080/api/measurements'\r\n          + '/' + this.measurementType\r\n          + '/' + this.$route.params.plantId\r\n          + '/' + 'between/',\r\n          { params: {begin: this.startDate, end: this.endDate}})\r\n      .then(response => {\r\n          //console.log(response.data)\r\n          this.measurements = response.data\r\n          this.measurementsLength = this.measurements.length\r\n          // console.log(this.startDate)\r\n          // console.log(this.endDate)\r\n          console.log(\"measurements: \" + this.measurements)\r\n          console.log(\"measurementsLength: \" + this.measurementsLength)\r\n          // calc compressed array\r\n          if (this.measurementsLength > this.maxValues) {\r\n            var factor = Math.floor(this.measurementsLength/this.maxValues)\r\n            var mod = this.measurementsLength%this.maxValues;\r\n            var reducedDate = this.measurements.slice(0, (this.measurementsLength-mod))\r\n            //console.log(\"mod: \" + mod)\r\n            //console.log(\"factor: \" + factor)\r\n            //console.log(\"reducedData: \" + reducedDate)\r\n            var tempValue = 0;\r\n            for (let key in reducedDate) {\r\n              var measurement = reducedDate[key];\r\n                tempValue+=measurement;\r\n              if(key%factor == (factor-1)) {\r\n                tempValue=Math.floor(tempValue/factor)\r\n                this.processedData.push(tempValue);\r\n                tempValue = 0;\r\n              }\r\n              //console.log(\"key: \" + key);\r\n            }\r\n          }\r\n          else {\r\n            this.processedData = this.measurements;\r\n          }\r\n          console.log(\"processedData: \" + this.processedData);\r\n          console.log(\"processedDataLength: \" + this.processedData.length)\r\n      });\r\n    // PlantService.getTempMeasurements().then((response) => {\r\n    //   this.measurements = response.data;\r\n    // });\r\n  },\r\n};\r\n</script>"],"sourceRoot":"src/components/measurements"}]}